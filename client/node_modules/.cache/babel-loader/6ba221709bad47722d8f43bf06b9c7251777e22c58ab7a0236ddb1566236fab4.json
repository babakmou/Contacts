{"ast":null,"code":"var _jsxFileName = \"/home/babak/contact-keeper/client/src/context/contact/ContactState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport { v4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, FILTER_CONTACT, CLEAR_FILTER } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactState = props => {\n  _s();\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'alain flou',\n      email: 'alain@gmail.com',\n      phone: '514-123-4567',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Annie claire',\n      email: 'annie@yahoo.com',\n      phone: '514-987-6543',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'John doe',\n      email: 'jdoe@outlook.com',\n      phone: '647-321-7654',\n      type: 'professional'\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Add contact\n  const addContact = contact => {\n    contact.id = v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  };\n\n  // Delete contact\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  };\n\n  // Set current contact\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n\n  // Clear current contact\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  // Update contact\n\n  // Filter contacts\n\n  // Clear filter\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      addContact,\n      deleteContact\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ContactState;\nexport default ContactState;\nvar _c;\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"names":["React","useReducer","v4","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","FILTER_CONTACT","CLEAR_FILTER","jsxDEV","_jsxDEV","ContactState","props","_s","initialState","contacts","id","name","email","phone","type","current","state","dispatch","addContact","contact","payload","deleteContact","setCurrent","clearCurrent","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/babak/contact-keeper/client/src/context/contact/ContactState.js"],"sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  FILTER_CONTACT,\n  CLEAR_FILTER,\n} from '../types';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [\n      {\n        id: 1,\n        name: 'alain flou',\n        email: 'alain@gmail.com',\n        phone: '514-123-4567',\n        type: 'personal',\n      },\n      {\n        id: 2,\n        name: 'Annie claire',\n        email: 'annie@yahoo.com',\n        phone: '514-987-6543',\n        type: 'personal',\n      },\n      {\n        id: 3,\n        name: 'John doe',\n        email: 'jdoe@outlook.com',\n        phone: '647-321-7654',\n        type: 'professional',\n      },\n    ],\n    current: null,\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Add contact\n  const addContact = (contact) => {\n    contact.id = v4();\n    dispatch({ type: ADD_CONTACT, payload: contact });\n  };\n\n  // Delete contact\n  const deleteContact = (id) => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n\n  // Set current contact\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear current contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Update contact\n\n  // Filter contacts\n\n  // Clear filter\n\n  return (\n    <ContactContext.Provider\n      value={{ contacts: state.contacts, addContact, deleteContact }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,EAAE,QAAQ,MAAM;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SACEC,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,aAAa,EACbC,cAAc,EACdC,YAAY,QACP,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAMC,YAAY,GAAG;IACnBC,QAAQ,EAAE,CACR;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE,iBAAiB;MACxBC,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE;IACR,CAAC,EACD;MACEJ,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,cAAc;MACpBC,KAAK,EAAE,iBAAiB;MACxBC,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE;IACR,CAAC,EACD;MACEJ,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE,kBAAkB;MACzBC,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE;IACR,CAAC,CACF;IACDC,OAAO,EAAE;EACX,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,UAAU,CAACG,cAAc,EAAEY,YAAY,CAAC;;EAElE;EACA,MAAMU,UAAU,GAAIC,OAAO,IAAK;IAC9BA,OAAO,CAACT,EAAE,GAAGhB,EAAE,CAAC,CAAC;IACjBuB,QAAQ,CAAC;MAAEH,IAAI,EAAEjB,WAAW;MAAEuB,OAAO,EAAED;IAAQ,CAAC,CAAC;EACnD,CAAC;;EAED;EACA,MAAME,aAAa,GAAIX,EAAE,IAAK;IAC5BO,QAAQ,CAAC;MAAEH,IAAI,EAAEhB,cAAc;MAAEsB,OAAO,EAAEV;IAAG,CAAC,CAAC;EACjD,CAAC;;EAED;EACA,MAAMY,UAAU,GAAIH,OAAO,IAAK;IAC9BF,QAAQ,CAAC;MAAEH,IAAI,EAAEf,WAAW;MAAEqB,OAAO,EAAED;IAAQ,CAAC,CAAC;EACnD,CAAC;;EAED;EACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzBN,QAAQ,CAAC;MAAEH,IAAI,EAAEd;IAAc,CAAC,CAAC;EACnC,CAAC;;EAED;;EAEA;;EAEA;;EAEA,oBACEI,OAAA,CAACT,cAAc,CAAC6B,QAAQ;IACtBC,KAAK,EAAE;MAAEhB,QAAQ,EAAEO,KAAK,CAACP,QAAQ;MAAES,UAAU;MAAEG;IAAc,CAAE;IAAAK,QAAA,EAE9DpB,KAAK,CAACoB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE9B,CAAC;AAACvB,EAAA,CAhEIF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAkElB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}