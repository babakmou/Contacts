{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, FILTER_CONTACT, CLEAR_FILTER, UPDATE_CONTACT } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      };\n    case FILTER_CONTACT:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      };\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","FILTER_CONTACT","CLEAR_FILTER","UPDATE_CONTACT","state","action","type","contacts","payload","filter","contact","id","current","map","filtered","regex","RegExp","name","match","email"],"sources":["/home/babak/contact-keeper/client/src/context/contact/contactReducer.js"],"sourcesContent":["import {\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  FILTER_CONTACT,\n  CLEAR_FILTER,\n  UPDATE_CONTACT,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [...state.contacts, action.payload],\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id ? action.payload : contact\n        ),\n      };\n    case FILTER_CONTACT:\n      return {\n        ...state,\n        filtered: state.contacts.filter((contact) => {\n          const regex = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        }),\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null,\n      };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SACEA,WAAW,EACXC,cAAc,EACdC,WAAW,EACXC,aAAa,EACbC,cAAc,EACdC,YAAY,EACZC,cAAc,QACT,UAAU;AAEjB,gBAAe,CAACC,KAAK,EAAEC,MAAM,KAAK;EAChC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,WAAW;MACd,OAAO;QACL,GAAGO,KAAK;QACRG,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAQ,EAAEF,MAAM,CAACG,OAAO;MAC9C,CAAC;IACH,KAAKV,cAAc;MACjB,OAAO;QACL,GAAGM,KAAK;QACRG,QAAQ,EAAEH,KAAK,CAACG,QAAQ,CAACE,MAAM,CAC5BC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACG,OACrC;MACF,CAAC;IACH,KAAKT,WAAW;MACd,OAAO;QACL,GAAGK,KAAK;QACRQ,OAAO,EAAEP,MAAM,CAACG;MAClB,CAAC;IACH,KAAKR,aAAa;MAChB,OAAO;QACL,GAAGI,KAAK;QACRQ,OAAO,EAAE;MACX,CAAC;IACH,KAAKT,cAAc;MACjB,OAAO;QACL,GAAGC,KAAK;QACRG,QAAQ,EAAEH,KAAK,CAACG,QAAQ,CAACM,GAAG,CAAEH,OAAO,IACnCA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACG,OAAO,CAACG,EAAE,GAAGN,MAAM,CAACG,OAAO,GAAGE,OACtD;MACF,CAAC;IACH,KAAKT,cAAc;MACjB,OAAO;QACL,GAAGG,KAAK;QACRU,QAAQ,EAAEV,KAAK,CAACG,QAAQ,CAACE,MAAM,CAAEC,OAAO,IAAK;UAC3C,MAAMK,KAAK,GAAG,IAAIC,MAAM,CAAE,GAAEX,MAAM,CAACG,OAAQ,EAAC,EAAE,IAAI,CAAC;UACnD,OAAOE,OAAO,CAACO,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,IAAIL,OAAO,CAACS,KAAK,CAACD,KAAK,CAACH,KAAK,CAAC;QAChE,CAAC;MACH,CAAC;IACH,KAAKb,YAAY;MACf,OAAO;QACL,GAAGE,KAAK;QACRU,QAAQ,EAAE;MACZ,CAAC;IACH;MACE,OAAOV,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}