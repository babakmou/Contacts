{"ast":null,"code":"var _jsxFileName = \"/home/babak/contact-keeper/client/src/context/contact/ContactState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, FILTER_CONTACT, CLEAR_CONTACTS, CLEAR_FILTER, UPDATE_CONTACT, CONTACT_ERROR } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactState = props => {\n  _s();\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Get contacts\n  const GetContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data.msg\n      });\n    }\n  };\n\n  // Add contact\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data.msg\n      });\n    }\n  };\n\n  // Delete contact\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  };\n\n  // Set current contact\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n\n  // Clear current contact\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  // Update contact\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  };\n\n  // Filter contacts\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: text\n    });\n  };\n\n  // Clear filter\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ContactState;\nexport default ContactState;\nvar _c;\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","FILTER_CONTACT","CLEAR_CONTACTS","CLEAR_FILTER","UPDATE_CONTACT","CONTACT_ERROR","jsxDEV","_jsxDEV","ContactState","props","_s","initialState","contacts","current","filtered","error","state","dispatch","GetContacts","res","get","type","payload","data","response","msg","addContact","contact","config","headers","post","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/babak/contact-keeper/client/src/context/contact/ContactState.js"],"sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  FILTER_CONTACT,\n  CLEAR_CONTACTS,\n  CLEAR_FILTER,\n  UPDATE_CONTACT,\n  CONTACT_ERROR,\n} from '../types';\n\nconst ContactState = (props) => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(contactReducer, initialState);\n\n  // Get contacts\n  const GetContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({ type: GET_CONTACTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.data.msg });\n    }\n  };\n\n  // Add contact\n  const addContact = async (contact) => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({ type: ADD_CONTACT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: CONTACT_ERROR, payload: error.response.data.msg });\n    }\n  };\n\n  // Delete contact\n  const deleteContact = (id) => {\n    dispatch({ type: DELETE_CONTACT, payload: id });\n  };\n\n  // Set current contact\n  const setCurrent = (contact) => {\n    dispatch({ type: SET_CURRENT, payload: contact });\n  };\n\n  // Clear current contact\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  // Update contact\n  const updateContact = (contact) => {\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\n  };\n\n  // Filter contacts\n  const filterContacts = (text) => {\n    dispatch({ type: FILTER_CONTACT, payload: text });\n  };\n\n  // Clear filter\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER });\n  };\n\n  return (\n    <ContactContext.Provider\n      value={{\n        contacts: state.contacts,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        addContact,\n        deleteContact,\n        setCurrent,\n        clearCurrent,\n        updateContact,\n        filterContacts,\n        clearFilter,\n      }}\n    >\n      {props.children}\n    </ContactContext.Provider>\n  );\n};\n\nexport default ContactState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}